function [corrected_diameter]=correct_poisson(dspot,dedge)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Using the method from Korolev 2007, we correct the diameter of images
% that have been affected by Poisson Spots.
% Inputs: Diameter of the Poisson Spot, diameter of the entire image
% Outputs: Corrected diameter of the image
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

x = dspot / dedge;

% These values come from the lookup table in Korolev 2007
dspot_dedge = [0.003,0.008,0.017,0.024,0.033,0.040,0.047,0.054,0.062,0.072,...
    0.076,0.088,0.093,0.096,0.101,0.119,0.123,0.127,0.130,0.134,0.139,0.148,...
    0.175,0.180,0.184,0.188,0.192,0.195,0.199,0.202,0.206,0.209,0.213,0.217,...
    0.221,0.225,0.230,0.235,0.243,0.327,0.334,0.340,0.345,0.351,0.355,0.360,...
    0.3650,0.369,0.373,0.377,0.381,0.385,0.389,0.393,0.397,0.400,0.404,0.408,...
    0.411,0.415,0.419,0.422,0.426,0.429,0.433,0.436,0.439,0.443,0.446,0.450,...
    0.453,0.457,0.460,0.463,0.467,0.470,0.473,0.477,0.480,0.484,0.487,0.490,...
    0.494,0.497,0.501,0.504,0.507,0.511,0.514,0.518,0.521,0.525,0.528,0.532,...
    0.535,0.539,0.543,0.547,0.550,0.554,0.558,0.562,0.566,0.569,0.572,0.575,...
    0.578,0.581,0.584,0.587,0.590,0.593,0.596,0.598,0.601,0.605,0.610,0.614,...
    0.618,0.623,0.627,0.631,0.635,0.640,0.644,0.648,0.653,0.657,0.662,0.666,...
    0.671,0.676,0.680,0.685,0.690,0.695,0.700,0.705,0.711,0.716,0.721,0.727,...
    0.733,0.738,0.744,0.751,0.757,0.763,0.770,0.777,0.784,0.792,0.800,0.808,...
    0.817,0.826,0.836,0.846,0.858,0.870,0.884,0.901,0.921,0.950];
    

dedge_d0 = [1.000,1.054,1.083,1.101,1.095,1.110,1.148,1.162,1.155,1.123,...
    1.182,1.121,1.162,1.210,1.242,1.134,1.166,1.202,1.238,1.270,1.294,1.278,...
    1.130,1.148,1.170,1.194,1.218,1.242,1.265,1.288,1.310,1.331,1.351,1.369,...
    1.386,1.400,1.411,1.416,1.407,1.074,1.080,1.087,1.096,1.106,1.117,1.127,...
    1.139,1.150,1.162,1.173,1.185,1.197,1.208,1.220,1.232,1.243,1.255,1.266,...
    1.277,1.289,1.300,1.311,1.322,1.333,1.344,1.355,1.366,1.376,1.387,1.397,...
    1.407,1.418,1.428,1.438,1.448,1.458,1.467,1.477,1.486,1.496,1.505,1.515,...
    1.524,1.533,1.542,1.551,1.559,1.568,1.577,1.585,1.594,1.602,1.610,1.618,...
    1.626,1.634,1.642,1.650,1.657,1.665,1.673,1.680,1.687,1.694,1.702,1.709,...
    1.716,1.722,1.729,1.736,1.742,1.749,1.755,1.761,1.768,1.774,1.780,1.786,...
    1.791,1.797,1.803,1.808,1.813,1.819,1.824,1.829,1.834,1.839,1.843,1.848,...
    1.852,1.857,1.861,1.865,1.869,1.872,1.876,1.880,1.883,1.886,1.889,1.892,...
    1.895,1.897,1.899,1.901,1.903,1.905,1.906,1.907,1.908,1.908,1.908,1.908,...
    1.907,1.905,1.903,1.900,1.897,1.892,1.885,1.877,1.865,1.845];


% Find the indices of dspot_dedge values that are just larger and just 
% smaller than x
greater_values_index = find(dspot_dedge >= x);
high_dspot_dedge = dspot_dedge(greater_values_index(1));

if high_dspot_dedge == 0.003
    low_dspot_dedge = 0;
    correction_diff = 1;
    diff = high_dspot_dedge - low_dspot_dedge;
    x_diff = x - low_dspot_dedge;
    fraction_diff = x_diff / diff;
else
    low_dspot_dedge = dspot_dedge(greater_values_index(1) - 1);
    % Find the the fraction x is between the dspot_dedge just larger and just
    % smaller than x
    diff = high_dspot_dedge - low_dspot_dedge;
    x_diff = x - low_dspot_dedge;
    fraction_diff = x_diff / diff;

    % Find the corresponding dedge_d0
    correction_diff = dedge_d0(greater_values_index(1)) - dedge_d0(greater_values_index(1) - 1);
end


correction = (fraction_diff*correction_diff) + dedge_d0(greater_values_index(1));

% Calculate the corrected diameter using the dedge_d0
corrected_diameter = dedge / correction;

end